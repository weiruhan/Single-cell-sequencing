"0","dev.off()"
"1","null device "
"1","
"
"1","          1 "
"1","
"
"0","# Use 50 PCs to run UMAP"
"0","pbmc <- RunUMAP(pbmc,dims = 1:50)"
"2","03:22:58 UMAP embedding parameters a = 0.9922 b = 1.112
"
"2","03:22:58 Read 2352 rows and found 50 numeric columns
"
"2","03:22:58 Using Annoy for neighbor search, n_neighbors = 30
"
"2","03:22:58 Building Annoy index with metric = cosine, n_trees = 50
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"2","03:22:58 Writing NN index file to temp file C:\Users\hanwe\AppData\Local\Temp\RtmpQBXTOl\file3af05ea55c59
"
"2","03:22:58 Searching Annoy index using 1 thread, search_k = 3000
"
"2","03:22:59 Annoy recall = 100%
"
"2","03:22:59 Commencing smooth kNN distance calibration using 1 thread
"
"2","03:23:00 Initializing from normalized Laplacian + noise
"
"2","03:23:00 Commencing optimization for 500 epochs, with 94988 positive edges
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"2","03:23:05 Optimization finished
"
"0","# Use KNN to run do clustering"
"0","pbmc <- FindNeighbors(pbmc, dims = 1:50,k.param = 15,n.trees = 100)"
"2","Computing nearest neighbor graph
"
"2","Computing SNN
"
"0","pbmc <- FindClusters(pbmc, resolution = 0.3,n.iter = 1000,n.start = 100)"
"1","Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck"
"1","
"
"1","
"
"1","Number of nodes: 2352
"
"1","Number of edges: 83246
"
"1","
"
"1","Running "
"1","Louvain algorithm"
"1","..."
"1","
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"1","Maximum modularity in 100 random starts: 0.9270
"
"1","Number of communities: 12
"
"1","Elapsed time: 1 seconds
"
